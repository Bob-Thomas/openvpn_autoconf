#! /bin/sh
### BEGIN INIT INFO
# Provides:       openvpn
# Required-Start: $local_fs $remote_fs $network
# Required-Stop:  $local_fs $remote_fs $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Description: Openvpn Service.
### END INIT INFO

set -e

# The .proto files can contain variables; they are applies
# by simply expanding those variables.
# Of course, this is a shell script, so expanding all the
# variables would create problems. Instead, cfgtool will
# simply insert instructions to load the variables here.
# It will also add an extra variable: VPN_DIR, that contains
# the location where the vpn config lies.
# Do not modify the line below.
<<<INSERT_VARIABLES_HERE>>>

test -n "$OPENVPN_BIN" || OPENVPN_BIN="`which openvpn`"
cfg_file="${VPN_DIR}/openvpn-server.cfg"

is_running() {
  local pid="`cat "$PID_FILE" 2>/dev/null`"
  test -n "$pid" && ps "$pid" 2>/dev/nul >/dev/null
}

_cmd_start() {
  if test -n "$ENABLE_IP_ROUTING"; then
    sysctl net.ipv4.ip_forward=1
  fi

  if is_running; then
    echo >&2 "Openvpn is already running"
  else
    cd "$VPN_DIR"
    "$OPENVPN_BIN" --daemon --config "$cfg_file"
    cd -
  fi
}

_cmd_stop() {
  is_running || {
    echo >&2 "Not running..."
    return 0
  }

  local pid="`cat "$PID_FILE" 2>/dev/null`"

  kill "$pid"
  is_running || return 0

  sleep 1
  is_running || return 0

  echo >&2 "Simple kill didn't work; trying kill -9"
  kill -9 "$pid"
  is_running || return 0

  echo >&2 "Unable to kill the VPN process"
  return 1
}

_cmd_restart() {
  if is_running; then
    _cmd_stop && _cmd_start
  else
    _cmd_start
  fi
}

_cmd_status() {
  if is_running; then
    echo >&2 "Running"
    cat >&2 "$STATUS_FILE"
  else
    echo >&2 "Stopped"
  fi
}


cmd="$1"; shift
_cmd_"$cmd" "$@"

